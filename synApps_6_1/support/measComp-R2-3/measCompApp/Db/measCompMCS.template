# measCompMCS.template
# Mark Rivers
# June 2, 2014

record(bi,"$(P)SNL_Connected") {
  field(ZNAM, "Not connected")
  field(ZSV,  "MAJOR")
  field(ONAM, "Connected")
  field(OSV,  "NO_ALARM")
}

record(bo,"$(P)EraseAll") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0)MCA_ERASE")
  field(ZNAM, "Done")
  field(ONAM, "Erase")
  field(VAL,  "1")
  field(FLNK, "$(P)ReadAllOnce")
}

record(bo,"$(P)EraseStart") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0)MCA_ERASE")
  field(ZNAM, "Done")
  field(ONAM, "Erase")
  field(VAL,  "1")
  field(FLNK, "$(P)StartAll.PROC")
}

record(bo,"$(P)StartAll") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0)MCA_START_ACQUIRE")
  field(ZNAM, "Done")
  field(ONAM, "Start")
  field(VAL,  "1")
  field(FLNK, "$(P)SetAcquiring.PROC")
}

record(bo,"$(P)SetAcquiring") {
  field(OUT,  "$(P)Acquiring PP MS")
  field(ZNAM, "Done")
  field(ONAM, "Set")
  field(VAL,  "1")
  field(FLNK, "$(P)SetClientWait.PROC")
}

record(busy,"$(P)Acquiring") {
  field(ZNAM, "Done")
  field(ONAM, "Acquiring")
}

record(bo,"$(P)StopAll") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0)MCA_STOP_ACQUIRE")
  field(ZNAM, "Done")
  field(ONAM, "Stop")
  field(VAL,  "1")
}

record(ao,"$(P)PresetReal") {
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),0)MCA_PRESET_REAL")
  field(VAL,  "0.0")
  field(PREC, "2")
}

record(bi,"$(P)HardwareAcquiring") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0)MCA_ACQUIRING")
  field(ZNAM, "Done")
  field(ONAM, "Acquiring")
  field(SCAN, "I/O Intr")
}

record(ai,"$(P)ElapsedReal") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0)MCA_ELAPSED_REAL")
  field(PREC, "2")
  field(SCAN, "I/O Intr")
}

record(bo,"$(P)ReadAll") {
  field(SCAN, "1 second")
  field(DISV, "0")
  field(SDIS, "$(P)Acquiring NPP NMS")
  field(ZNAM, "Done")
  field(ONAM, "Read")
  field(FLNK, "$(P)ReadAllOnce")
}

record(bo,"$(P)ReadAllOnce") {
  field(VAL,  "1")
  field(OUT,  "$(P)DoReadAll.VAL PP MS")
}

record(bo,"$(P)DoReadAll") {
  field(ZNAM, "Done")
  field(ONAM, "Read")
}

record(longout,"$(P)NuseAll") {
  field(PINI, "YES")
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0)MCA_NUM_CHANNELS")
}

record(longin,"$(P)CurrentChannel") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0)MCS_CURRENT_POINT")
  field(SCAN, "I/O Intr")
}

record(ao,"$(P)Dwell") {
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),0)MCA_DWELL_TIME")
  field(VAL,  "0.1")
  field(PREC, "3")
}

record(bo,"$(P)ChannelAdvance") {
  field(PINI, "YES")
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0)MCA_CH_ADV_SOURCE")
  field(ZNAM, "Internal")
  field(ONAM, "External")
}

record(longout,"$(P)Prescale") {
  field(PINI, "YES")
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0)MCA_PRESCALE")
  field(VAL,  "1")
}

record(bo,"$(P)EnableClientWait") {
  field(PINI, "YES")
  field(ZNAM, "Disable")
  field(ONAM, "Enable")
}

record(bo,"$(P)SetClientWait") {
  field(DISV, "0")
  field(SDIS, "$(P)EnableClientWait NPP NMS")
  field(OMSL, "closed_loop")
  field(DOL,  "1")
  field(OUT,  "$(P)ClientWait PP MS")
  field(ONAM, "SetClientWait")
  field(ZNAM, "Done")
}

record(busy,"$(P)ClientWait") {
}

record(mbbo,"$(P)FirstCounter") {
  field(PINI, "YES")
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0)MCS_FIRST_COUNTER")
  field(ZRVL, "0")
  field(ZRST, "CTR0")
  field(ONVL, "1")
  field(ONST, "CTR1")
  field(TWVL, "2")
  field(TWST, "CTR2")
  field(THVL, "3")
  field(THST, "CTR3")
  field(FRVL, "4")
  field(FRST, "CTR4")
  field(FVVL, "5")
  field(FVST, "CTR5")
  field(SXVL, "6")
  field(SXST, "CTR6")
  field(SVVL, "7")
  field(SVST, "CTR7")
}

record(mbbo,"$(P)LastCounter") {
  field(PINI, "YES")
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0)MCS_LAST_COUNTER")
  field(ZRVL, "0")
  field(ZRST, "CTR0")
  field(ONVL, "1")
  field(ONST, "CTR1")
  field(TWVL, "2")
  field(TWST, "CTR2")
  field(THVL, "3")
  field(THST, "CTR3")
  field(FRVL, "4")
  field(FRST, "CTR4")
  field(FVVL, "5")
  field(FVST, "CTR5")
  field(SXVL, "6")
  field(SXST, "CTR6")
  field(SVVL, "7")
  field(SVST, "CTR7")
}

record(mbbo,"$(P)PrescaleCounter") {
  field(PINI, "YES")
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0)MCS_PRESCALE_COUNTER")
  field(ZRVL, "0")
  field(ZRST, "CTR0")
  field(ONVL, "1")
  field(ONST, "CTR1")
  field(TWVL, "2")
  field(TWST, "CTR2")
  field(THVL, "3")
  field(THST, "CTR3")
  field(FRVL, "4")
  field(FRST, "CTR4")
  field(FVVL, "5")
  field(FVST, "CTR5")
  field(SXVL, "6")
  field(SXST, "CTR6")
  field(SVVL, "7")
  field(SVST, "CTR7")
}

record(longin,"$(P)MaxChannels") {
  field(PINI, "YES")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0)MCS_MAX_POINTS")
}

record(mbbi, "$(P)Model") {
  field(PINI, "YES")
  field(DESC, "Model")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT) 0)MODEL")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(ZRST, "USB-CTR08")
  field(ONST, "USB-CTR04")
}


# asyn record for debugging
record(asyn, "$(P)Asyn") {
  field(PORT, "$(PORT)")
}
