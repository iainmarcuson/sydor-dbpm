#!/bin/bash

EPICS_HOST_ARCH=linux-x86_64

CSSPATH=`cat CONFIG.txt|grep 'epicsEnvSet("CSSPATH"' |awk -F'[""]' '{print $4}'`
PREFIX=`cat CONFIG.txt|grep 'epicsEnvSet("PREFIX"' |awk -F'[""]' '{print $4}'`
RECORD=`cat CONFIG.txt|grep 'epicsEnvSet("RECORD"' |awk -F'[""]' '{print $4}'`
CSSEXEC=`cat CONFIG.txt|grep 'epicsEnvSet("CSSEXEC"' |awk -F'[""]' '{print $4}'`

SPLIT_ID=""

export EPICS_CA_MAX_ARRAY_BYTES=1000000
PATH=/usr/lib/epics2/base/bin/linux-x86_64:$PATH
DIR="$HOME/work/bsharp-dev/synApps_6_1/support/quadEM-R9-2-1"
CSSGUI="$DIR/quadEMApp/op/opi/autoconvert/CSS/xbpm_SIEPB4.opi"
help(){
        printf "Syntax:\n       ./iocrun {Option}\nOptions:\n       {gui}: Start CSS GUI\n  {startioc}: Boot IOC.\n      {help}: This menu\n"
}

function finish {
    #kill $SPLIT_ID
    true
}

trap finish EXIT

if [ ! -z $1 ];then
        if [ $1 = 'gui' ];then
                cd $CSSPATH
		echo "GUI is $CSSGUI"
		echo "PREFIX is $PREFIX"
                echo `./$CSSEXEC --launcher.openfile "$CSSGUI P=$PREFIX,R=$RECORD"`
		
	elif [ $1 = 'startioc' ];then
	    printf "\n**Load calibration\n"
	    
	       
            printf "\n**Initialize IOC\n"
	    cp CONFIG.txt "$DIR"
	    echo "Starting EPICS."
	    cd "$DIR"
            cd iocBoot/iocBS_EM
	    #///XXX TESTING  Put in an empty file to allow parsing
	    echo "" > calibration.ini
            ./st.cmd
	    
		
        elif [ $1 = 'help' ];then
                help

        else
                printf "**Unknown function\n"
                help
        fi

else
        printf "**Please select a function\n"
        help
        exit 1
fi
                               
